"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const command_1 = require("@oclif/command");
const write_to_file_1 = require("../common/write-to-file");
class GenerateDotEnv extends command_1.Command {
    async run() {
        const { args, flags } = this.parse(GenerateDotEnv);
        write_to_file_1.writeToFile(this, args.file, '.env', flags.source, flags.target, flags.force);
    }
}
exports.default = GenerateDotEnv;
GenerateDotEnv.description = 'Automatically create .env files from an example env file';
GenerateDotEnv.examples = [
    `$ init-dev-env generate-dot-env
      example.env from ./src/generate-dot-env.ts!
      `,
    `$ init-dev-env generate-dot-env
      example.env --source examples --target server from ./src/generate-dot-env.ts!
      `,
];
GenerateDotEnv.flags = {
    help: command_1.flags.help({ char: 'h' }),
    source: command_1.flags.string({
        char: 's',
        description: 'path for example .env file',
    }),
    target: command_1.flags.string({
        char: 't',
        description: 'target path to create .env file',
        dependsOn: ['source'],
    }),
    force: command_1.flags.boolean({ char: 'f' }),
};
GenerateDotEnv.args = [
    { name: 'file', description: 'name of example .env file', required: true },
];
